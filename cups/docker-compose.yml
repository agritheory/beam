version: "3"

services:
  cups:
    container_name: ${DOCKER_CUPS_SERVICE_NAME}
    build:
      context: .
      dockerfile: Cups.Dockerfile
      args:
        CUPS_ADMIN_USER: ${CUPS_ADMIN_USER}
        CUPS_ADMIN_PASSWORD: ${CUPS_ADMIN_PASSWORD}
    ports:
      - "${DOCKER_CUPS_SERVICE_PORT}:631"
    volumes:
      - ./cupsd.conf:/etc/cups/cupsd.conf
    environment:
      CUPS_ADMIN: ${CUPS_ADMIN_USER}
      CUPS_ADMIN_PASS: ${CUPS_ADMIN_PASSWORD}
    networks:
      - network

  # caddy:
  #   container_name: ${DOCKER_CADDY_SERVICE_NAME}
  #   build:
  #     context: .
  #     dockerfile: Caddy.Dockerfile
  #   ports:
  #     - "${DOCKER_CADDY_SERVICE_HTTP_PORT}:80"
  #     - "${DOCKER_CADDY_SERVICE_HTTPS_PORT}:443"
  #   volumes:
  #     - ./Caddyfile:/etc/caddy/Caddyfile
  #     # - cert:/etc/caddy
  #     - ./etc/letsencrypt:/etc/letsencrypt
  #     - ./certbot/data:/var/www/certbot
  #   depends_on:
  #     - cups
  #     # - certbot
  #     # - certbot-2
  #   networks:
  #     - network

  certbot-2:
    build:
      context: .
      dockerfile: Certbot.Dockerfile
    environment:
      - CERTBOT_DOMAIN=${DOMAIN}
    # depends_on:
    #   - nginx
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
    networks:
      - network

  # nginx:
  #   container_name: nginx
  #   image: nginx:latest
  #   ports:
  #     - "${DOCKER_CADDY_SERVICE_HTTP_PORT}:80"
  #   volumes:
  #     - ./etc/nginx/templates-initiate:/etc/nginx/templates
  #     - ./etc/letsencrypt:/etc/letsencrypt
  #     - ./certbot/data:/var/www/certbot
  #   networks:
  #     - network

  # certbot:
  #   container_name: certbot
  #   image: certbot/certbot:latest
  #   depends_on:
  #     - nginx
  #   # command: certonly --reinstall --webroot --webroot-path=/var/www/certbot --email test@test.com --agree-tos --no-eff-email -d test.com
  #   command: sleep 60
  #   volumes:
  #     - ./etc/letsencrypt:/etc/letsencrypt
  #     - ./certbot/data:/var/www/certbot

# volumes:
  # cert: null
  # certbot-data: null

networks:
  network:
    name: ${DOCKER_NETWORK_NAME}
    external: true
